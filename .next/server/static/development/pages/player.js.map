{"version":3,"file":"static/development/pages/player.js","sources":["webpack:///webpack/bootstrap","webpack:///components/page.js","webpack:///pages/player.js","webpack:///routes.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"nextjs-dynamic-routes\"","webpack:///external \"node-fetch\"","webpack:///external \"react\"","webpack:///external \"react-chartjs-2\"","webpack:///external \"rmwc/Button\"","webpack:///external \"rmwc/Card\"","webpack:///external \"rmwc/Dialog\"","webpack:///external \"rmwc/Drawer\"","webpack:///external \"rmwc/GridList\"","webpack:///external \"rmwc/List\"","webpack:///external \"rmwc/Ripple\"","webpack:///external \"rmwc/Select\"","webpack:///external \"rmwc/TextField\"","webpack:///external \"rmwc/TopAppBar\"","webpack:///external \"rmwc/Typography\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React, { Component } from 'react';\r\nimport {\r\n  TopAppBar,\r\n  TopAppBarRow,\r\n  TopAppBarSection,\r\n  TopAppBarNavigationIcon,\r\n  TopAppBarTitle,\r\n  TopAppBarFixedAdjust\r\n} from 'rmwc/TopAppBar';\r\n\r\nimport { TextField } from 'rmwc/TextField';\r\n\r\nimport {\r\n  Drawer,\r\n  DrawerContent\r\n} from 'rmwc/Drawer';\r\n\r\nimport {\r\n  ListItem,\r\n  ListItemText\r\n} from 'rmwc/List';\r\n\r\nimport { Button, ButtonIcon } from 'rmwc/Button';\r\n\r\nimport '../styles/page.scss';\r\n\r\nimport Router from '../routes';\r\n\r\nimport 'material-components-web/dist/material-components-web.min.css';\r\n\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      persistentOpen: true, \r\n      invalid: false\r\n    };\r\n\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.menuBtnPressed = this.menuBtnPressed.bind(this);\r\n    this.searchPlayer = this.searchPlayer.bind(this);\r\n  }\r\n\r\n  menuBtnPressed() {\r\n    // Set the state of the drawer, if it is closed or it's undefined, open it\r\n    if (this.state.persistentOpen === true)\r\n    {\r\n      this.setState({persistentOpen: false});\r\n\r\n      // Start animation to move the content left with the drawer\r\n      document.querySelector('.atomic-content-wrapper').style.animationName = \"move-left\"; // Default padding\r\n      document.querySelector('.atomic-content-wrapper').style.animationDuration = \"200ms\";\r\n      document.querySelector('.atomic-content-wrapper').style.paddingLeft = \"0px\";\r\n    } else {\r\n      this.setState({persistentOpen: true});\r\n\r\n      // Start animation to move the content right with the drawer\r\n      document.querySelector('.atomic-content-wrapper').style.animationName = \"move-right\"; // Default padding\r\n      document.querySelector('.atomic-content-wrapper').style.animationDuration = \"250ms\";\r\n      document.querySelector('.atomic-content-wrapper').style.paddingLeft = \"239px\";\r\n    }\r\n\r\n  }\r\n\r\n  searchPlayer() {\r\n    var playerName = this.refs.searchField.value;\r\n\r\n    if (playerName.length === 0)\r\n    {\r\n      document.querySelector('.atomic-search-field input').focus();\r\n      this.setState({invalid: true});\r\n      return;\r\n    }\r\n\r\n    Router.pushRoute('player', {username: playerName})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <TopAppBar theme=\"primary\" fixed className=\"atomic-app-bar\">\r\n            <TopAppBarRow>\r\n              <TopAppBarSection alignStart>\r\n                <TopAppBarNavigationIcon theme=\"primary\" use=\"menu\" onClick={this.menuBtnPressed}/>\r\n                <TopAppBarTitle>Atomic Stats</TopAppBarTitle>\r\n              </TopAppBarSection>\r\n            </TopAppBarRow>\r\n          </TopAppBar>\r\n        </div>\r\n        <div>\r\n          <Drawer persistent className=\"atomic-drawer\" open={this.state.persistentOpen}>\r\n            <div className=\"mdc-drawer__toolbar-spacer\" />\r\n            <DrawerContent className=\"atomic-drawer-content\">\r\n              <ListItem>\r\n                <ListItemText>Friends</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>My Stats</ListItemText>\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText>My Profile</ListItemText>\r\n              </ListItem>\r\n            </DrawerContent>\r\n          </Drawer>\r\n        </div>\r\n        <TopAppBarFixedAdjust className=\"atomic-content-wrapper\">\r\n          <div className=\"atomic-search-wrapper\">\r\n            <TextField box onKeyPress={(e) => e.key == \"Enter\" ? this.searchPlayer() : null} invalid={this.state.invalid} ref=\"searchField\" id=\"atomic-search-field\" className=\"atomic-search-field\" label=\"Epic Games Username\" />\r\n            <Button raised accent theme=\"secondary\" className=\"atomic-search-button\" onClick={this.searchPlayer}>\r\n              <ButtonIcon>search</ButtonIcon>\r\n              Search\r\n            </Button>\r\n          </div>\r\n          <div className=\"atomic-content\">\r\n            {this.props.children}\r\n          </div>\r\n        </TopAppBarFixedAdjust>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/*class AtomicIconRadioButton extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Set toggled as false\r\n    this.state = {toggled: this.props.selected === undefined ? false : this.props.selected};\r\n\r\n    // Create a ref to the element and bind the function\r\n    this.toggleElement = React.createRef();\r\n    this.select = this.select.bind(this);\r\n    this.deselect = this.deselect.bind(this);\r\n  }\r\n\r\n  select() {\r\n    // If the button isn't toggled, toggle it\r\n    if (this.state.toggled === false)\r\n    {\r\n      this.setState({toggled: true});\r\n      ReactDOM.findDOMNode(this.toggleElement.current).style.color = this.props.selectedColor;\r\n\r\n      // Call the group handler to handle the other radio buttons with the index of the button\r\n      this.props.groupHandler(this.props.index);\r\n    }\r\n  }\r\n\r\n  deselect() {\r\n    this.setState({toggled: false});\r\n    ReactDOM.findDOMNode(this.toggleElement.current).style.color = this.props.clearColor;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <IconToggle ref={this.toggleElement}\r\n        className=\"atomic-icon-radio-button\"\r\n        style={{color: this.state.toggled ? this.props.selectedColor : this.props.clearColor}}\r\n        data-icon-inner-selector={this.props.iconSelector}\r\n        on={{cssClass: this.props.icon}}\r\n        off={{cssClass: this.props.icon}}\r\n        onChange={this.select}>\r\n        <i className={this.props.iconClass} />\r\n      </IconToggle>\r\n    )\r\n  }\r\n}\r\n\r\nclass AtomicIconRadioGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Bind 'this' to the function\r\n    this.buttonToggled = this.buttonToggled.bind(this);\r\n    this.getSelectedValue = this.getSelectedValue.bind(this);\r\n\r\n    // Set the current option to not selected\r\n    this.state = {\r\n      currentOption: -1\r\n    }\r\n\r\n    // Create array of refs to hold the buttons\r\n    this.buttonRefs = []\r\n    for (var i = 0; i < this.props.info.length; i++)\r\n    {\r\n      this.buttonRefs[i] = React.createRef();\r\n    }\r\n\r\n    // If a selected index has been sent, toggle the button\r\n    if (this.props.selectedIndex !== undefined) {\r\n      // Set the current option to not selected\r\n      this.state = {\r\n        currentOption: this.props.selectedIndex\r\n      }\r\n    }\r\n  }\r\n\r\n  buttonToggled(index) {\r\n    // If the current option isn't not selected, deselect the current option\r\n    if (this.state.currentOption !== -1)\r\n    {\r\n      // Deselect the current button\r\n      this.buttonRefs[this.state.currentOption].current.deselect();\r\n    }\r\n\r\n    // Set the new selected button index\r\n    this.setState({currentOption: index});\r\n  }\r\n\r\n  getSelectedValue() {\r\n    if (this.state.currentOption !== -1)\r\n    {\r\n      return this.props.info[this.state.currentOption].value;\r\n    } else {\r\n      return \"None\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    var buttons = []\r\n\r\n    // Go through the buttons info that were given as a prop, for each one create a button\r\n    for (var i = 0; i < this.props.info.length; i++)\r\n    {\r\n      // Create the button\r\n      const iconRadioBtn = <AtomicIconRadioButton\r\n                            ref={this.buttonRefs[i]}\r\n                            key={i}\r\n                            selected={this.state.currentOption === i}\r\n                            clearColor={this.props.clearColor}\r\n                            selectedColor={this.props.selectedColor}\r\n                            iconSelector={this.props.info[i].iconSelector}\r\n                            icon={this.props.info[i].icon}\r\n                            iconClass={this.props.info[i].iconClass}\r\n                            index={i}\r\n                            groupHandler={this.buttonToggled}\r\n                          />\r\n\r\n      // Add the button to the list of buttons\r\n      buttons.push(iconRadioBtn)\r\n    }\r\n\r\n    return(\r\n      <div className={this.props.className + ' ' + \"atomic-icon-radio-group\"}>\r\n        {buttons}\r\n      </div>\r\n    )\r\n  }\r\n}*/\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\nimport fetch from 'node-fetch';\r\n\r\nimport Page from '../components/page.js';\r\nimport '../styles/player.scss';\r\n\r\nimport { Select } from 'rmwc/Select';\r\nimport { Typography } from 'rmwc/Typography';\r\nimport { Card } from 'rmwc/Card';\r\nimport { \r\n  GridList, \r\n  GridTile,   \r\n  GridTilePrimary,\r\n  GridTileSecondary\r\n} from 'rmwc/GridList';\r\nimport {\r\n  Dialog,\r\n  DialogSurface,\r\n  DialogHeader,\r\n  DialogHeaderTitle,\r\n  DialogBody,\r\n  DialogFooter,\r\n  DialogFooterButton,\r\n  DialogBackdrop\r\n} from 'rmwc/Dialog';\r\nimport { Ripple } from 'rmwc/Ripple';\r\n\r\nimport { Bar, Doughnut } from 'react-chartjs-2';\r\n\r\nconst numberWithCommas = (x) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nexport default class Player extends Component {\r\n  static async getInitialProps({ res, query }) {\r\n    var stats = undefined;\r\n    \r\n    await fetch(`https://atomic-api.herokuapp.com/player/${query.username}`)\r\n      .then(response => response.json())\r\n      .then(json => {\r\n        if ('error' in json) {\r\n          //stats = {displayName: \"Unknown\"};\r\n        } else {\r\n          stats = json;\r\n        }\r\n      })\r\n      .catch(ex => {\r\n        //stats = {displayName: \"Unknown\"};\r\n      })\r\n\r\n    return {stats};\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      seasonRange: 'alltime',\r\n      platform: 'pc',\r\n\r\n      chartData: undefined,\r\n      chartType: undefined,\r\n      chartTitle: undefined\r\n    };\r\n\r\n    // This binding is necessary to make `this` work in the callback\r\n    this.createDoughnutData = this.createDoughnutData.bind(this);\r\n  }\r\n\r\n  createDoughnutData(key) {\r\n    var data = {\r\n      labels: [],\r\n      datasets: [{\r\n        data: [],\r\n        backgroundColor: [\r\n          '#00b0ff',\r\n          '#76ff03',\r\n          '#ff9100'\r\n        ]\r\n      }]\r\n    }\r\n    \r\n    var modes = {\r\n      'Solo': this.props.stats.stats[this.state.seasonRange][this.state.platform].solo[key],\r\n      'Duo': this.props.stats.stats[this.state.seasonRange][this.state.platform].duo[key],\r\n      'Squad': this.props.stats.stats[this.state.seasonRange][this.state.platform].squad[key]\r\n    }\r\n\r\n    // Add to the data only the data that isn't 0\r\n    for (var mode in modes)\r\n    {\r\n      if (modes[mode] != 0)\r\n      {\r\n        console.log(data);\r\n        data.labels.push(mode);\r\n        data.datasets[0].data.push(modes[mode]);\r\n      }\r\n    }\r\n\r\n    return (data)\r\n  }\r\n\r\n  createBarData(key) {\r\n    var data = {\r\n      labels: [],\r\n      datasets: [{\r\n        data: [],\r\n        borderColor: '#ffffff',\r\n        borderWidth: 2,\r\n        backgroundColor: [\r\n          '#00b0ff',\r\n          '#76ff03',\r\n          '#ff9100'\r\n        ]\r\n      }]\r\n    }\r\n\r\n    var modes = {\r\n      'Solo': this.props.stats.stats[this.state.seasonRange][this.state.platform].solo[key],\r\n      'Duo': this.props.stats.stats[this.state.seasonRange][this.state.platform].duo[key],\r\n      'Squad': this.props.stats.stats[this.state.seasonRange][this.state.platform].squad[key]\r\n    }\r\n\r\n    // Add to the data only the data that isn't 0\r\n    for (var mode in modes)\r\n    {\r\n      if (modes[mode] != 0)\r\n      {\r\n        console.log(data);\r\n        data.labels.push(mode);\r\n        data.datasets[0].data.push(modes[mode]);\r\n      }\r\n    }\r\n\r\n    return (data);\r\n  }\r\n\r\n  render() {\r\n    if (this.props.stats === undefined)\r\n    {\r\n      return (\r\n        <Page>\r\n          <h1>Player not found!</h1>\r\n        </Page>\r\n      )\r\n    }\r\n\r\n    var platformSelect = []\r\n\r\n    // Add only the platforms that the user is playing on\r\n    if (this.props.stats.stats[this.state.seasonRange].pc !== undefined)\r\n      platformSelect.push({\r\n        label: 'PC',\r\n        value: 'pc'\r\n      })\r\n\r\n    if (this.props.stats.stats[this.state.seasonRange].ps4 !== undefined)\r\n      platformSelect.push({\r\n        label: 'PlayStation 4',\r\n        value: 'ps4'\r\n      })\r\n\r\n    if (this.props.stats.stats[this.state.seasonRange].xb1 !== undefined)\r\n      platformSelect.push({\r\n        label: 'Xbox One',\r\n        value: 'xb1'\r\n      })\r\n\r\n    // Get the played platforms\r\n    var platforms = platformSelect.map(function(plat){\r\n      return plat.value;\r\n    });\r\n\r\n    // If the selected platform isn't one of them, change it to one of them to prevent crash\r\n    if (!platforms.includes(this.state.platform))\r\n    {\r\n      this.state.platform = platformSelect[0].value;\r\n    }\r\n\r\n    var statChart;\r\n\r\n    if (this.state.chartType === 'doughnut')\r\n    {\r\n      statChart = <Doughnut data={ this.createDoughnutData(this.state.chartData) } legend={{ labels: { fontColor: \"#ffffff\" } }} options={{ tooltips: { callbacks: { label: function(tooltipItem, data) { var value = data.datasets[0].data[tooltipItem.index]; value = value.toString(); value = value.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"); return value; } } } }} />;\r\n    } else if (this.state.chartType === 'bar') {\r\n      statChart = <Bar data={ this.createBarData(this.state.chartData) } legend={{ display: false, fontColor: \"#ffffff\" }} options={{ scales: { xAxes: [{ ticks: { fontColor: \"white\" }, gridLines: { color: \"#424242\" } }], yAxes: [{ ticks: { beginAtZero: true, max: this.state.chartBarMax ? this.state.chartBarMax : 100, fontColor: \"white\" }, gridLines: { color: \"#424242\" } }] } }}/>;\r\n    }\r\n\r\n    var kdChartMax = Math.ceil(Math.max(this.props.stats.stats[this.state.seasonRange][this.state.platform].solo['kd'], this.props.stats.stats[this.state.seasonRange][this.state.platform].duo['kd'], this.props.stats.stats[this.state.seasonRange][this.state.platform].squad['kd']) / 10) * 10\r\n\r\n    var matches;\r\n\r\n    return (\r\n      <Page>\r\n        <br />\r\n\r\n        <Dialog\r\n          open={ this.state.chartData !== undefined }\r\n          onClose={evt => this.setState({ chartData: undefined, chartType: undefined, chartTitle: undefined })}\r\n        >\r\n          <DialogSurface style={{ backgroundColor: \"var(--mdc-theme-secondary)\" }}>\r\n            <DialogHeader>\r\n              <DialogHeaderTitle style={{ color: \"white\" }}>{ this.state.chartTitle }</DialogHeaderTitle>\r\n            </DialogHeader>\r\n            <DialogBody>\r\n              { statChart }             \r\n            </DialogBody>\r\n            <DialogFooter>\r\n                <DialogFooterButton accept>Close</DialogFooterButton>\r\n            </DialogFooter>\r\n          </DialogSurface>\r\n          <DialogBackdrop />\r\n        </Dialog>\r\n\r\n        <div style={{paddingLeft: \"10px\", paddingRight: \"10px\"}}>\r\n          <AtomicCard className=\"atomic-player-total-stats-card\" title={this.props.stats.displayName} titleSize=\"headline3\" titleColor=\"var(--mdc-theme-primary)\" outlineColor=\"var(--mdc-theme-primary)\" backgroundColor=\"var(--drawer-color)\" width=\"calc(100% - 8px)\" maxWidth=\"970px\">\r\n            <div className=\"atomic-section\">\r\n              <Select className=\"atomic-select atomic-season-range-select\"\r\n                box\r\n                value={this.state.seasonRange}\r\n                onChange={evt => this.setState({seasonRange: evt.target.value})}\r\n                label=\"Season Range\"\r\n                options={[\r\n                  {\r\n                    label: 'All Seasons',\r\n                    value: 'alltime',\r\n                    color: \"black\"\r\n                  },\r\n                  {\r\n                    label: 'Season 5',\r\n                    value: 'weekly',\r\n                    color: \"black\"\r\n                  }\r\n                ]}\r\n              />\r\n\r\n              <Select className=\"atomic-select atomic-platform-select\"\r\n                box\r\n                value={this.state.platform}\r\n                onChange={evt => this.setState({platform: evt.target.value})}\r\n                label=\"Platform\"\r\n                style={{ minWidth: \"140px\" }}\r\n                options={ platformSelect }\r\n              />\r\n            </div>\r\n\r\n            <hr className=\"atomic-divider\" style={{ marginTop: \"68px\", marginBottom: \"10px\" }}/>\r\n\r\n            <div className=\"atomic-section\">\r\n              <GridList tileAspect=\"3x2\" style={{ display: \"flex\" }}>\r\n                <AtomicStatTile onClick={ () => this.setState({ chartData: 'score', chartType: 'doughnut', chartTitle: \"Score\" }) } title=\"Score\" value={this.props.stats.stats[this.state.seasonRange][this.state.platform].total.score} />\r\n                <AtomicStatTile onClick={ () => this.setState({ chartData: 'matches', chartType: 'doughnut', chartTitle: \"Matches\" }) } title=\"Matches\" value={this.props.stats.stats[this.state.seasonRange][this.state.platform].total.matches} />\r\n                <AtomicStatTile onClick={ () => this.setState({ chartData: 'wins', chartType: 'doughnut', chartTitle: \"Wins\" }) } title=\"Wins\" value={this.props.stats.stats[this.state.seasonRange][this.state.platform].total.wins} />\r\n                <AtomicStatTile onClick={ () => this.setState({ chartData: 'kd', chartType: 'bar', chartTitle: \"K/D Ratio\", chartBarMax: kdChartMax }) } title=\"K/D Ratio\" value={this.props.stats.stats[this.state.seasonRange][this.state.platform].total.kd} />\r\n                <AtomicStatTile onClick={ () => this.setState({ chartData: 'winrate', chartType: 'bar', chartTitle: \"Win %\", chartBarMax: 100 }) } title=\"Win %\" value={this.props.stats.stats[this.state.seasonRange][this.state.platform].total.winrate} />\r\n              </GridList>\r\n              <Typography style={{ paddingLeft: \"15px\", color: \"#9e9e9e\" }} use=\"caption\">Tip: Click on the stat for detailed chart!</Typography>\r\n            </div>\r\n          </AtomicCard>\r\n\r\n          <div className=\"atomic-player-stats\" style={{ paddingTop: \"50px\", display: \"flex\", justifyContent: \"space-evenly\" }}>\r\n            <AtomicModeStatsCard keys={{ score: \"Score\", wins: \"Wins\", kills: \"Kills\", kd: \"K/D\", winrate: \"Win%\", top10: \"Top 10\", top25: \"Top 25\", kpm: \"Kills per Match\", spm: \"Score per Match\" }} title=\"Solo\" stats={this.props.stats.stats[this.state.seasonRange][this.state.platform].solo} color=\"#00b0ff\" />\r\n            <AtomicModeStatsCard keys={{ score: \"Score\", wins: \"Wins\", kills: \"Kills\", kd: \"K/D\", winrate: \"Win%\", top5: \"Top 5\", top12: \"Top 12\", kpm: \"Kills per Match\", spm: \"Score per Match\" }} title=\"Duo\" stats={this.props.stats.stats[this.state.seasonRange][this.state.platform].duo} color=\"#76ff03\" />\r\n            <AtomicModeStatsCard keys={{ score: \"Score\", wins: \"Wins\", kills: \"Kills\", kd: \"K/D\", winrate: \"Win%\", top3: \"Top 3\", top6: \"Top 6\", kpm: \"Kills per Match\", spm: \"Score per Match\" }} title=\"Squad\" stats={this.props.stats.stats[this.state.seasonRange][this.state.platform].squad} color=\"#ff9100\" />\r\n          </div>\r\n        </div>\r\n      </Page>\r\n    );\r\n  }\r\n}\r\n\r\nclass AtomicModeStatsCard extends Component {\r\n  render() {\r\n    return (\r\n      <AtomicCard className={ this.props.className ? this.props.className : \"\" + ' ' + \"atomic-mode-stats-card\" } title={this.props.title} subtitle={ numberWithCommas(this.props.stats.matches) + \" Matches\"} titleSize=\"headline4\" titleColor={this.props.color} outlineColor={this.props.color} backgroundColor=\"var(--drawer-color)\" width=\"350px\" maxWidth=\"970px\">\r\n        <GridList>\r\n          {\r\n            Object.entries(this.props.keys).map( ([key, name], i) => <AtomicStatMiniTile key={i} noBorder={i == Object.entries(this.props.keys).length - 1} color={this.props.color} title={name} value={this.props.stats[key]} /> )\r\n          }\r\n        </GridList>\r\n      </AtomicCard>\r\n    )\r\n  }\r\n}\r\n\r\nclass AtomicStatMiniTile extends Component {\r\n  render() {\r\n    var divider = this.props.noBorder ? (\r\n      \"\"\r\n    ) : <hr className=\"atomic-stat-divider\" style={{ borderColor: this.props.color }} />\r\n\r\n    return (\r\n      <div className={ this.props.className ? this.props.className : \"\" + ' ' + \"atomic-stat-mini-tile\" } style={ {...this.props.style} }>\r\n        <Ripple onClick={ this.props.onClick }>\r\n          <div style={{ minWidth: \"320px\", height: \"35px\", display: \"flex\", alignItems: \"center\", justifyContent: \"space-between\" }}>\r\n            <Typography use=\"body1\" style={{ paddingLeft: \"5px\", color: \"white\" }}>{ this.props.title }</Typography>\r\n            <Typography use=\"body2\" style={{ paddingRight: \"5px\", color: this.props.color }}>{ numberWithCommas(this.props.value) }</Typography>\r\n          </div>\r\n        </Ripple>\r\n        {divider}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass AtomicStatTile extends Component {\r\n  render() {\r\n    return (\r\n      <Ripple onClick={ this.props.onClick }>\r\n        <GridTile style={{ width: \"180px\" }} className={ this.props.className ? this.props.className : \"\" + ' ' + \"atomic-stat-tile\" }>\r\n          <GridTilePrimary style={{ backgroundColor: \"var(--mdc-theme-secondary)\" }}>\r\n            <div style={{ minHeight: \"78px\", display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n              <Typography use=\"headline4\" style={{ color: \"var(--mdc-theme-primary)\" }}>{ numberWithCommas(this.props.value) }</Typography>\r\n            </div>\r\n          </GridTilePrimary>\r\n          <GridTileSecondary style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\", paddingTop: \"17px\", paddingLeft: \"0px\", paddingRight: \"0px\" }}>\r\n            <Typography use=\"headline5\" style={{ color: 'var(--mdc-theme-secondary)' }}>{this.props.title}</Typography>\r\n          </GridTileSecondary>\r\n        </GridTile>\r\n      </Ripple>\r\n    )\r\n  }\r\n}\r\n\r\nclass AtomicCard extends Component {\r\n  render() {\r\n    var polygon = \"polygon(20px 0%, 100% 0, 100% 0, 100% calc(100% - 20px), calc(100% - 20px) 100%, 0 100%, 0 100%, 0% 20px)\";\r\n\r\n    return (\r\n      <div className={ this.props.className ? this.props.className : \"\" + ' ' + \"atomic-card\" } style={ this.props.style }>\r\n        <Card style={{ maxWidth: this.props.maxWidth, width: this.props.width, backgroundColor: this.props.outlineColor, clipPath: polygon, WebkitClipPath: polygon, margin: \"auto\" }} className=\"atomic-outer-card\">\r\n          <Card style={{ maxWidth: this.props.maxWidth, clipPath: polygon, WebkitClipPath: polygon, backgroundColor: this.props.backgroundColor, margin: \"4px 4px\" }} className=\"atomic-inner-card\">\r\n            <div className=\"atomic-card-title\" style={{ display: \"flex\", justifyContent: \"space-between\", paddingTop: \"8px\", display: \"flex\", alignItems: \"center\", paddingLeft: \"20px\", width: \"100%\", height: \"60px\", backgroundColor: \"var(--mdc-theme-secondary)\" }}>\r\n              <Typography use={this.props.titleSize} style={{ color: this.props.titleColor }}>{this.props.title}</Typography>\r\n              <Typography use=\"headline5\" style={{ marginRight: \"35px\", color: \"white\" }}>{this.props.subtitle}</Typography>\r\n            </div>\r\n            <div className=\"atomic-card-content\" style={{ padding: \"10px 10px\" }}>\r\n              {this.props.children}\r\n            </div>\r\n          </Card>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","const Router = require('nextjs-dynamic-routes')\r\n\r\nconst router = module.exports = new Router()\r\n\r\nrouter.add({ name: 'player', pattern: '/player/:username/:platform(pc|ps4|xb1)?' });\r\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"nextjs-dynamic-routes\");","module.exports = require(\"node-fetch\");","module.exports = require(\"react\");","module.exports = require(\"react-chartjs-2\");","module.exports = require(\"rmwc/Button\");","module.exports = require(\"rmwc/Card\");","module.exports = require(\"rmwc/Dialog\");","module.exports = require(\"rmwc/Drawer\");","module.exports = require(\"rmwc/GridList\");","module.exports = require(\"rmwc/List\");","module.exports = require(\"rmwc/Ripple\");","module.exports = require(\"rmwc/Select\");","module.exports = require(\"rmwc/TextField\");","module.exports = require(\"rmwc/TopAppBar\");","module.exports = require(\"rmwc/Typography\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AASA;AAEA;AAKA;AAKA;AAEA;AAEA;AAEA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAFA;AACA;AAKA;AACA;AATA;AAUA;AACA;;;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA1FA;AA6FA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1PA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAMA;AAUA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AACA;AACA;;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAGA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AANA;AACA;AASA;AAbA;AAcA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAYA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAcA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AAKA;AAEA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAXA;AAAA;AAAA;AAAA;AAAA;AAmBA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AA3OA;AACA;AADA;AACA;AA6OA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAXA;AACA;AAaA;;;;;;;;;;;;;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAjBA;AACA;AAmBA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;;;;AAhBA;AACA;AAkBA;;;;;;;;;;;;;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAnBA;;;;;;;;;;;ACpUA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}